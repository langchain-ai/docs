---
name: Create Preview Branch
run-name: Preview by @${{ github.actor }}

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: create-preview-${{ github.ref_name }}
  cancel-in-progress: true

# Least-privileged defaults. We'll elevate at the job level only where needed.
permissions:
  contents: read
  actions: read

jobs:
  create-preview:
    # This job needs to push a branch, so contents: write here only.
    permissions:
      contents: write
    runs-on: ubuntu-latest

    # Expose the generated preview branch name for the next job
    outputs:
      preview_branch: ${{ steps.branch-name.outputs.branch_name }}

    env:
      SOURCE_BRANCH: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
      GITHUB_SHA: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

    steps:
      - name: Validate and sanitize branch context
        id: validate
        run: |
          set -euo pipefail
          echo "[INFO] Current ref: ${{ github.ref }}"
          echo "[INFO] Branch name: $SOURCE_BRANCH"
          if [[ ! "$SOURCE_BRANCH" =~ ^[a-zA-Z0-9/_-]+$ ]]; then
            echo "[ERROR] Branch name contains invalid characters. Only alphanumeric, slash, underscore, and hyphen are allowed."
            exit 1
          fi
          if [[ ${#SOURCE_BRANCH} -gt 100 ]]; then
            echo "[ERROR] Branch name too long (max 100)."
            exit 1
          fi
          SAFE_LOG_BRANCH=$(echo "$SOURCE_BRANCH" | cut -c1-20)
          echo "safe_branch_log=$SAFE_LOG_BRANCH" >> $GITHUB_OUTPUT
          echo "[SUCCESS] Branch validation passed for: $SAFE_LOG_BRANCH"

      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: make install

      - name: Build documentation
        run: make build

      - name: Generate secure preview branch name
        id: branch-name
        run: |
          set -euo pipefail
          safe_prefix=$(echo "$SOURCE_BRANCH" | tr -cd '[:alnum:]' | cut -c1-6)
          timestamp=$(date +%s)
          short_sha="${GITHUB_SHA:0:7}"
          PREVIEW_BRANCH="preview-${safe_prefix}-${timestamp}-${short_sha}"
          echo "branch_name=$PREVIEW_BRANCH" >> $GITHUB_OUTPUT
          echo "[INFO] Preview branch will be: $PREVIEW_BRANCH"

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if preview branch already exists
        run: |
          set -euo pipefail
          PREVIEW_BRANCH="${{ steps.branch-name.outputs.branch_name }}"
          if git ls-remote --exit-code --heads origin "$PREVIEW_BRANCH" >/dev/null 2>&1; then
            echo "[ERROR] Preview branch $PREVIEW_BRANCH already exists."
            exit 1
          fi
          echo "[SUCCESS] Preview branch name is unique"

      - name: Create and push preview branch
        run: |
          set -euo pipefail
          PREVIEW_BRANCH="${{ steps.branch-name.outputs.branch_name }}"
          SAFE_BRANCH_LOG="${{ steps.validate.outputs.safe_branch_log }}"
          git checkout -b "$PREVIEW_BRANCH"
          git add -f build/
          if git diff --cached --quiet; then
            echo "[WARN] No build artifacts to commit"
          else
            git commit -m "Add build artifacts for preview deployment

            Source branch: $SAFE_BRANCH_LOG
            Generated from commit: $GITHUB_SHA
            Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
            Do not merge this branch to main."
          fi
          git push origin "$PREVIEW_BRANCH"
          echo "[SUCCESS] Successfully pushed preview branch"

      - name: Save preview branch info (log)
        run: |
          PREVIEW_BRANCH="${{ steps.branch-name.outputs.branch_name }}"
          SAFE_BRANCH_LOG="${{ steps.validate.outputs.safe_branch_log }}"
          echo "[SUCCESS] Preview branch created: $PREVIEW_BRANCH"
          echo "[INFO] ðŸ”— Branch URL: https://github.com/${{ github.repository }}/tree/$PREVIEW_BRANCH"

  comment-on-pr:
    # Only this job gets permission to write PR comments.
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    needs: create-preview
    if: github.event_name == 'pull_request' && needs.create-preview.result == 'success'

    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const preview = `${{ needs.create-preview.outputs.preview_branch }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Preview ID generated: ${preview}`
            });
