[project]
name = "docs-monorepo"
version = "0.0.1"
description = "LangChain docs build pipeline."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "watchdog>=3.0.0",
    "tqdm>=4.66.0",
    "nbformat>=5.0.0",
    "pyyaml>=6.0.2",
]

[dependency-groups]
test = [
    "mypy>=1.16.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-socket>=0.7.0",
    "pytest-timeout>=2.3.1",
    "ruff>=0.9.7",
    "types-pyyaml>=6.0.12.20250516",
    "types-tqdm>=4.67.0.20250516",
]

[project.scripts]
docs = "pipeline.cli:main"

[project.urls]
repository = "https://github.com/langchain-ai/docs"

[tool.setuptools]
packages = ["pipeline"]

[tool.uv]
package = true


[tool.pytest.ini_options]
minversion = "8.0"
# -ra: Report all extra test outcomes (passed, skipped, failed, etc.)
# -q: Enable quiet mode for less cluttered output
# -v: Enable verbose output to display detailed test names and statuses
# --durations=5: Show the 10 slowest tests after the run (useful for performance tuning)
addopts = "-ra -q -v --durations=5"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"


[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
  "ALL",
]
ignore = [
  "COM812",
]


[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "D104",
    # The below are debatable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.pydocstyle]
convention = "google"

